SET(SRC_LIST main.cpp main.h client.cpp server.cpp
        include/IDmdDatatype.h include/IDmdCaptureDevice.h include/IDmdCaptureEngine.h
        linux/CDmdCaptureDeviceLinux.h linux/CDmdCaptureDeviceLinux.cpp
        utils/DmdLog.h utils/DmdLog.cpp
        utils/DmdConfig.h utils/DmdConfig.cpp
        utils/DmdCmdlineParameter.h utils/DmdCmdlineParameter.cpp
        utils/DmdMutex.h utils/DmdMutex.cpp)

MESSAGE(STATUS "CMAKE_SYSTEM_NAME is ${CMAKE_SYSTEM_NAME}")
MESSAGE(STATUS "CMAKE_SYSTEM_PROCESSOR is ${CMAKE_SYSTEM_PROCESSOR}")
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
        SET(GLOG_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/vendor/glog/linux-x86_64/include)
        SET(GLOG_LIB_DIR ${PROJECT_SOURCE_DIR}/vendor/glog/linux-x86_64/lib)
    ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
ELSEIF(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
    IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
        SET(GLOG_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/vendor/glog/mac-x86_64/include)
        SET(GLOG_LIB_DIR ${PROJECT_SOURCE_DIR}/vendor/glog/mac-x86_64/lib)
    ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")

IF(NOT GLOG_LIB_DIR OR NOT GLOG_INCLUDE_DIR)
    MESSAGE(FATAL_ERROR "GLOG_LIB_DIR or GLOG_INCLUDE_DIR is not set")
ENDIF(NOT GLOG_LIB_DIR OR NOT GLOG_INCLUDE_DIR)

SET(SRC_DIR ${PROJECT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${SRC_DIR})
SET(INCLUDE_DIR ${PROJECT_SOURCE_DIR}/src/include)
INCLUDE_DIRECTORIES(${INCLUDE_DIR})

LINK_DIRECTORIES(${GLOG_LIB_DIR})
INCLUDE_DIRECTORIES(${GLOG_INCLUDE_DIR})
MESSAGE(STATUS "GLOG_INCLUDE_DIR is ${GLOG_INCLUDE_DIR}")
MESSAGE(STATUS "GLOG_LIB_DIR is ${GLOG_LIB_DIR}")

ADD_EXECUTABLE(openDMD ${SRC_LIST})
TARGET_LINK_LIBRARIES(openDMD glog)
ADD_SUBDIRECTORY(include)

